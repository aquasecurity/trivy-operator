---
apiVersion: aquasecurity.github.io/v1alpha1
kind: ConfigAuditReport
metadata:
  generation: 1
  labels:
    plugin-config-hash: <HASH>
    resource-spec-hash: <HASH>
    trivy-operator.resource.kind: CronJob
    trivy-operator.resource.name: hello
    trivy-operator.resource.namespace: default
  name: cronjob-hello
  namespace: default
  ownerReferences:
    - apiVersion: batch/v1
      blockOwnerDeletion: false
      controller: true
      kind: CronJob
      name: hello
      uid: null
report:
  scanner:
    name: Trivy
    vendor: Aqua Security
    version: version
  summary:
    criticalCount: 0
    highCount: 1
    mediumCount: 3
    lowCount: 9
  checks:
    - category: Kubernetes Security Check
      checkID: KSV001
      description: A program inside the container can elevate its own privileges and
        run as root, which might give the program control over the container and
        node.
      messages:
        - Container 'hello' of CronJob 'hello' should set
          'securityContext.allowPrivilegeEscalation' to false
      remediation: Set 'set containers[].securityContext.allowPrivilegeEscalation' to
        'false'.
      severity: MEDIUM
      success: false
      title: Can elevate its own privileges
    - category: Kubernetes Security Check
      checkID: KSV003
      description: The container should drop all default capabilities and add only
        those that are needed for its execution.
      messages:
        - Container 'hello' of CronJob 'hello' should add 'ALL' to
          'securityContext.capabilities.drop'
      remediation: Add 'ALL' to containers[].securityContext.capabilities.drop.
      severity: LOW
      success: false
      title: "Default capabilities: some containers do not drop all"
    - category: Kubernetes Security Check
      checkID: KSV011
      description: Enforcing CPU limits prevents DoS via resource exhaustion.
      messages:
        - Container 'hello' of CronJob 'hello' should set 'resources.limits.cpu'
      remediation: Set a limit value under 'containers[].resources.limits.cpu'.
      severity: LOW
      success: false
      title: CPU not limited
    - category: Kubernetes Security Check
      checkID: KSV012
      description: Force the running image to run as a non-root user to ensure least
        privileges.
      messages:
        - Container 'hello' of CronJob 'hello' should set
          'securityContext.runAsNonRoot' to true
      remediation: Set 'containers[].securityContext.runAsNonRoot' to true.
      severity: MEDIUM
      success: false
      title: Runs as root user
    - category: Kubernetes Security Check
      checkID: KSV014
      description: An immutable root file system prevents applications from writing to
        their local disk. This can limit intrusions, as attackers will not be
        able to tamper with the file system or write foreign executables to
        disk.
      messages:
        - Container 'hello' of CronJob 'hello' should set
          'securityContext.readOnlyRootFilesystem' to true
      remediation: Change 'containers[].securityContext.readOnlyRootFilesystem' to 'true'.
      severity: HIGH
      success: false
      title: Root file system is not read-only
    - category: Kubernetes Security Check
      checkID: KSV015
      description: When containers have resource requests specified, the scheduler can
        make better decisions about which nodes to place pods on, and how to
        deal with resource contention.
      messages:
        - Container 'hello' of CronJob 'hello' should set
          'resources.requests.cpu'
      remediation: Set 'containers[].resources.requests.cpu'.
      severity: LOW
      success: false
      title: CPU requests not specified
    - category: Kubernetes Security Check
      checkID: KSV016
      description: When containers have memory requests specified, the scheduler can
        make better decisions about which nodes to place pods on, and how to
        deal with resource contention.
      messages:
        - Container 'hello' of CronJob 'hello' should set
          'resources.requests.memory'
      remediation: Set 'containers[].resources.requests.memory'.
      severity: LOW
      success: false
      title: Memory requests not specified
    - category: Kubernetes Security Check
      checkID: KSV018
      description: Enforcing memory limits prevents DoS via resource exhaustion.
      messages:
        - Container 'hello' of CronJob 'hello' should set
          'resources.limits.memory'
      remediation: Set a limit value under 'containers[].resources.limits.memory'.
      severity: LOW
      success: false
      title: Memory not limited
    - category: Kubernetes Security Check
      checkID: KSV020
      description: Force the container to run with user ID > 10000 to avoid conflicts
        with the host’s user table.
      messages:
        - Container 'hello' of CronJob 'hello' should set
          'securityContext.runAsUser' > 10000
      remediation: Set 'containers[].securityContext.runAsUser' to an integer > 10000.
      severity: LOW
      success: false
      title: Runs with UID <= 10000
    - category: Kubernetes Security Check
      checkID: KSV021
      description: Force the container to run with group ID > 10000 to avoid conflicts
        with the host’s user table.
      messages:
        - Container 'hello' of CronJob 'hello' should set
          'securityContext.runAsGroup' > 10000
      remediation: Set 'containers[].securityContext.runAsGroup' to an integer > 10000.
      severity: LOW
      success: false
      title: Runs with GID <= 10000
    - category: Kubernetes Security Check
      checkID: KSV030
      description: According to pod security standard 'Seccomp', the RuntimeDefault
        seccomp profile must be required, or allow specific additional profiles.
      messages:
        - Either Pod or Container should set
          'securityContext.seccompProfile.type' to 'RuntimeDefault'
      remediation: Set 'spec.securityContext.seccompProfile.type',
        'spec.containers[*].securityContext.seccompProfile' and
        'spec.initContainers[*].securityContext.seccompProfile' to
        'RuntimeDefault' or undefined.
      severity: LOW
      success: false
      title: Runtime/Default Seccomp profile not set
    - category: Kubernetes Security Check
      checkID: KSV104
      description: A program inside the container can bypass Seccomp protection policies.
      messages:
        - container "hello" of cronjob "hello" in "default" namespace should
          specify a seccomp profile
      remediation: Specify seccomp either by annotation or by seccomp profile type
        having allowed values as per pod security standards
      severity: MEDIUM
      success: false
      title: Seccomp policies disabled
    - category: Kubernetes Security Check
      checkID: KSV106
      description: Containers must drop ALL capabilities, and are only permitted to
        add back the NET_BIND_SERVICE capability.
      messages:
        - container should drop all
      remediation: Set 'spec.containers[*].securityContext.capabilities.drop' to 'ALL'
        and only add 'NET_BIND_SERVICE' to
        'spec.containers[*].securityContext.capabilities.add'.
      severity: LOW
      success: false
      title: Container capabilities must only include NET_BIND_SERVICE
