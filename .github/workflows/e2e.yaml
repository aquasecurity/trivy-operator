---
# End 2 End on CRON schedule (every night) or on demand.
name: End to End Testing

on:
  workflow_dispatch: {}
  schedule:
    - cron: "0 0 * * *"

env:
  GO_VERSION: "1.19.1"

jobs:
  e2e-testing:
    name: End to End Testing
    runs-on: ubuntu-20.04
    env:
      DOCKER_CLI_EXPERIMENTAL: "enabled"
    permissions:
      contents: write
      id-token: write
      packages: write
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Checkout code
        uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Release snapshot
        uses: goreleaser/goreleaser-action@v4
        with:
          version: v1.7.0
          args: release -f=goreleaser-e2e.yaml --snapshot --skip-publish --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COSIGN_EXPERIMENTAL: 1
      - name: Login to ghcr.io
        uses: docker/login-action@v2.1.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Tag and push image
        run: |
          docker tag ghcr.io/aquasecurity/trivy-operator:${{ github.sha }}-amd64 ghcr.io/aquasecurity/trivy-operator:nightly
          docker push ghcr.io/aquasecurity/trivy-operator:nightly
      - name: Setup Kubernetes cluster (KIND)
        uses: helm/kind-action@v1.5.0
      - name: Test connection to Kubernetes cluster
        run: |
          kubectl cluster-info
          kubectl wait --for=condition=Ready nodes --all --timeout=300s
          kubectl describe node
      - name: Install kuttl
        run: |
          mkdir -p ./bin
          curl -L https://github.com/kudobuilder/kuttl/releases/download/v0.15.0/kubectl-kuttl_0.15.0_linux_x86_64 -o ./bin/kuttl;
          chmod +x ./bin/kuttl;
      - name: Generated Test Manifests
        run: |
          make generated-test-manifests
      - name: Image scan mode producing vulnerability reoport test
        run: |
          ./bin/kuttl test --start-kind=false --config tests/config/image-mode.yaml
          ./tests/resources-cleanup.sh > /dev/null 2>&1
      - name: fs scan mode producing vulnerability reoport test
        run: |
          ./bin/kuttl test --start-kind=false --config tests/config/fs-mode.yaml
          ./tests/resources-cleanup.sh > /dev/null 2>&1
      - name: client/server mode producing vulnerability reoport test
        run: |
          ./bin/kuttl test --start-kind=false --config tests/config/client-server.yaml
          ./tests/resources-cleanup.sh > /dev/null 2>&1
